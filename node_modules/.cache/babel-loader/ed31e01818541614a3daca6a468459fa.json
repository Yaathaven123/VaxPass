{"ast":null,"code":"const mysql = require('mysql');\n\nlet instance = null;\nconst connection = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"\",\n  database: \"vaxpass\",\n  port: \"3306\"\n});\nconnection.connect(err => {\n  if (err) {\n    console.log(\"Something went wrong!\");\n    console.log(err.message);\n  } else {\n    console.log(\"Connection Successfull!\");\n    console.log('db status :' + connection.state);\n  }\n});\nconnection.query('INSERT INTO records (nic) VALUES (\"dadads\");', (err, rows) => {\n  if (err) throw err;\n}); // connection.query('SELECT * FROM records', (err,rows) => {\n//   if(err) throw err;\n//   console.log('Data received from Db:');\n//   console.log(rows);\n// });\n\nclass DbService {\n  static getDbServiceInstance() {\n    return instance ? instance : new DbService();\n  }\n\n  async pushData() {\n    try {\n      const records = await new Promise((resolve, reject) => {\n        const query = \"INSERT INTO records VALUES (11111111);\";\n        connection.query(query, (err, result) => {\n          if (err) reject(new Error(err.message));\n          resolve(result.records);\n        });\n      });\n      console.log(records);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}\n\nmodule.exports = DbService;","map":{"version":3,"sources":["/Users/sandaru/Desktop/Project/src/dbService.js"],"names":["mysql","require","instance","connection","createConnection","host","user","password","database","port","connect","err","console","log","message","state","query","rows","DbService","getDbServiceInstance","pushData","records","Promise","resolve","reject","result","Error","error","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIC,QAAQ,GAAG,IAAf;AAEA,MAAMC,UAAU,GAAGH,KAAK,CAACI,gBAAN,CAAuB;AACtCC,EAAAA,IAAI,EAAE,WADgC;AAEtCC,EAAAA,IAAI,EAAE,MAFgC;AAGtCC,EAAAA,QAAQ,EAAE,EAH4B;AAItCC,EAAAA,QAAQ,EAAE,SAJ4B;AAKtCC,EAAAA,IAAI,EAAE;AALgC,CAAvB,CAAnB;AAQEN,UAAU,CAACO,OAAX,CAAoBC,GAAD,IAAO;AACtB,MAAIA,GAAJ,EAAQ;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACD,GAHD,MAII;AACFF,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBV,UAAU,CAACY,KAAvC;AACD;AACJ,CATD;AAYAZ,UAAU,CAACa,KAAX,CAAiB,8CAAjB,EAAiE,CAACL,GAAD,EAAKM,IAAL,KAAc;AAC7E,MAAGN,GAAH,EAAQ,MAAMA,GAAN;AACT,CAFD,E,CAIA;AACA;AACA;AACA;AACA;;AAEA,MAAMO,SAAN,CAAgB;AACa,SAApBC,oBAAoB,GAAE;AAC3B,WAAOjB,QAAQ,GAAGA,QAAH,GAAc,IAAIgB,SAAJ,EAA7B;AACD;;AAEe,QAARE,QAAQ,GAAE;AACZ,QAAI;AACA,YAAMC,OAAO,GAAG,MAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnD,cAAMR,KAAK,GAAG,wCAAd;AAEAb,QAAAA,UAAU,CAACa,KAAX,CAAiBA,KAAjB,EAAwB,CAACL,GAAD,EAAMc,MAAN,KAAiB;AACrC,cAAId,GAAJ,EAASa,MAAM,CAAC,IAAIE,KAAJ,CAAUf,GAAG,CAACG,OAAd,CAAD,CAAN;AACTS,UAAAA,OAAO,CAACE,MAAM,CAACJ,OAAR,CAAP;AACH,SAHD;AAIH,OAPqB,CAAtB;AAQAT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ;AAEH,KAXD,CAWE,OAAOM,KAAP,EAAc;AACZf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACH;AACJ;;AApBW;;AAuBlBC,MAAM,CAACC,OAAP,GAAiBX,SAAjB","sourcesContent":["const mysql = require('mysql');\nlet instance = null;\n\nconst connection = mysql.createConnection({\n    host: \"localhost\",\n    user: \"root\",\n    password: \"\",\n    database: \"vaxpass\",\n    port: \"3306\"\n  });\n\n  connection.connect((err)=>{\n      if (err){\n        console.log(\"Something went wrong!\");\n        console.log(err.message);\n      }\n      else{\n        console.log(\"Connection Successfull!\");\n        console.log('db status :' + connection.state);\n      }\n  })\n\n\n  connection.query('INSERT INTO records (nic) VALUES (\"dadads\");', (err,rows) => {\n    if(err) throw err;\n  });\n\n  // connection.query('SELECT * FROM records', (err,rows) => {\n  //   if(err) throw err;\n  //   console.log('Data received from Db:');\n  //   console.log(rows);\n  // });\n\n  class DbService {\n    static getDbServiceInstance(){\n      return instance ? instance : new DbService();\n    }\n\n      async pushData(){\n          try {\n              const records = await new Promise((resolve, reject) => {\n                  const query = \"INSERT INTO records VALUES (11111111);\";\n\n                  connection.query(query, (err, result) => {\n                      if (err) reject(new Error(err.message));\n                      resolve(result.records);\n                  })\n              });\n              console.log(records);\n              \n          } catch (error) {\n              console.log(error)\n          }\n      }\n  }\n\nmodule.exports = DbService;"]},"metadata":{},"sourceType":"module"}